{"name": "Add MacBook to wish list", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (142, -216)\n  (Session info: chrome=136.0.7103.114)\nStacktrace:\n\tGetHandleVerifier [0x00007FF71C77CF45+75717]\n\tGetHandleVerifier [0x00007FF71C77CFA0+75808]\n\t(No symbol) [0x00007FF71C548F9A]\n\t(No symbol) [0x00007FF71C5A7439]\n\t(No symbol) [0x00007FF71C5A4DF2]\n\t(No symbol) [0x00007FF71C5A1EA1]\n\t(No symbol) [0x00007FF71C5A0DA1]\n\t(No symbol) [0x00007FF71C592394]\n\t(No symbol) [0x00007FF71C5C737A]\n\t(No symbol) [0x00007FF71C591C46]\n\t(No symbol) [0x00007FF71C5C7590]\n\t(No symbol) [0x00007FF71C5EF39C]\n\t(No symbol) [0x00007FF71C5C7153]\n\t(No symbol) [0x00007FF71C590421]\n\t(No symbol) [0x00007FF71C5911B3]\n\tGetHandleVerifier [0x00007FF71CA7D71D+3223453]\n\tGetHandleVerifier [0x00007FF71CA77CC2+3200322]\n\tGetHandleVerifier [0x00007FF71CA95AF3+3322739]\n\tGetHandleVerifier [0x00007FF71C796A1A+180890]\n\tGetHandleVerifier [0x00007FF71C79E11F+211359]\n\tGetHandleVerifier [0x00007FF71C785294+109332]\n\tGetHandleVerifier [0x00007FF71C785442+109762]\n\tGetHandleVerifier [0x00007FF71C76BA59+4825]\n\tBaseThreadInitThunk [0x00007FFCFA27E8D7+23]\n\tRtlUserThreadStart [0x00007FFCFBCBC5DC+44]", "trace": "pages = (<page_object.Home_page.HomePage object at 0x000002004D771C10>, <page_object.Product_page.ProductPage object at 0x0000...ject.Cart_page.CartPage object at 0x000002004D7D39E0>, <page_object.Login_page.LoginPage object at 0x000002004D7D39B0>)\n\n    @allure.feature(\"Wish List\")\n    @allure.title(\"Add MacBook to wish list\")\n    def test_add_to_wish_list(pages):\n        home_page, _, _, login_page = pages\n        login_page.go_to_signup_page()\n        login_page.signup(\"Test\", \"User\", \"asd@asd.ru\", \"qweasz1234\")\n        # login_page.go_to_login_page()\n        # login_page.login(\"asd@asd.ru\", \"qweasz1234\")\n>       home_page.go_to_home()\n\ntest\\cp4_test.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_object\\Home_page.py:21: in go_to_home\n    self.click(By.XPATH, \"//a[contains(@href, 'common/home')]\")\npage_object\\Base_page.py:11: in click\n    self.driver.find_element(by, value).click()\nC:\\Users\\taper\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\nC:\\Users\\taper\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nC:\\Users\\taper\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002004D7702C0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...1C76BA59+4825]\\\\n\\\\tBaseThreadInitThunk [0x00007FFCFA27E8D7+23]\\\\n\\\\tRtlUserThreadStart [0x00007FFCFBCBC5DC+44]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (142, -216)\nE         (Session info: chrome=136.0.7103.114)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF71C77CF45+75717]\nE       \tGetHandleVerifier [0x00007FF71C77CFA0+75808]\nE       \t(No symbol) [0x00007FF71C548F9A]\nE       \t(No symbol) [0x00007FF71C5A7439]\nE       \t(No symbol) [0x00007FF71C5A4DF2]\nE       \t(No symbol) [0x00007FF71C5A1EA1]\nE       \t(No symbol) [0x00007FF71C5A0DA1]\nE       \t(No symbol) [0x00007FF71C592394]\nE       \t(No symbol) [0x00007FF71C5C737A]\nE       \t(No symbol) [0x00007FF71C591C46]\nE       \t(No symbol) [0x00007FF71C5C7590]\nE       \t(No symbol) [0x00007FF71C5EF39C]\nE       \t(No symbol) [0x00007FF71C5C7153]\nE       \t(No symbol) [0x00007FF71C590421]\nE       \t(No symbol) [0x00007FF71C5911B3]\nE       \tGetHandleVerifier [0x00007FF71CA7D71D+3223453]\nE       \tGetHandleVerifier [0x00007FF71CA77CC2+3200322]\nE       \tGetHandleVerifier [0x00007FF71CA95AF3+3322739]\nE       \tGetHandleVerifier [0x00007FF71C796A1A+180890]\nE       \tGetHandleVerifier [0x00007FF71C79E11F+211359]\nE       \tGetHandleVerifier [0x00007FF71C785294+109332]\nE       \tGetHandleVerifier [0x00007FF71C785442+109762]\nE       \tGetHandleVerifier [0x00007FF71C76BA59+4825]\nE       \tBaseThreadInitThunk [0x00007FFCFA27E8D7+23]\nE       \tRtlUserThreadStart [0x00007FFCFBCBC5DC+44]\n\nC:\\Users\\taper\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: ElementClickInterceptedException"}, "steps": [{"name": "click", "status": "passed", "parameters": [{"name": "by", "value": "'xpath'"}, {"name": "value", "value": "'//span[contains(text(), 'My Account')]'"}], "start": 1748867708011, "stop": 1748867708085}, {"name": "click", "status": "passed", "parameters": [{"name": "by", "value": "'xpath'"}, {"name": "value", "value": "'//a[contains(text(), 'Register')]'"}], "start": 1748867708087, "stop": 1748867708298}, {"name": "send_keys", "status": "passed", "parameters": [{"name": "by", "value": "'css selector'"}, {"name": "value", "value": "'#input-firstname'"}, {"name": "text", "value": "'Test'"}], "start": 1748867708298, "stop": 1748867708357}, {"name": "send_keys", "status": "passed", "parameters": [{"name": "by", "value": "'css selector'"}, {"name": "value", "value": "'#input-lastname'"}, {"name": "text", "value": "'User'"}], "start": 1748867708358, "stop": 1748867708400}, {"name": "send_keys", "status": "passed", "parameters": [{"name": "by", "value": "'css selector'"}, {"name": "value", "value": "'#input-email'"}, {"name": "text", "value": "'asd@asd.ru'"}], "start": 1748867708400, "stop": 1748867708448}, {"name": "send_keys", "status": "passed", "parameters": [{"name": "by", "value": "'css selector'"}, {"name": "value", "value": "'#input-password'"}, {"name": "text", "value": "'qweasz1234'"}], "start": 1748867708448, "stop": 1748867708494}, {"name": "scroll_down", "status": "passed", "parameters": [{"name": "value", "value": "300"}], "start": 1748867708494, "stop": 1748867709007}, {"name": "click", "status": "passed", "parameters": [{"name": "by", "value": "'name'"}, {"name": "value", "value": "'agree'"}], "start": 1748867709007, "stop": 1748867709049}, {"name": "click", "status": "passed", "parameters": [{"name": "by", "value": "'xpath'"}, {"name": "value", "value": "'//button[contains(text(), 'Continue')]'"}], "start": 1748867709049, "stop": 1748867709098}, {"name": "click", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (142, -216)\n  (Session info: chrome=136.0.7103.114)\nStacktrace:\n\tGetHandleVerifier [0x00007FF71C77CF45+75717]\n\tGetHandleVerifier [0x00007FF71C77CFA0+75808]\n\t(No symbol) [0x00007FF71C548F9A]\n\t(No symbol) [0x00007FF71C5A7439]\n\t(No symbol) [0x00007FF71C5A4DF2]\n\t(No symbol) [0x00007FF71C5A1EA1]\n\t(No symbol) [0x00007FF71C5A0DA1]\n\t(No symbol) [0x00007FF71C592394]\n\t(No symbol) [0x00007FF71C5C737A]\n\t(No symbol) [0x00007FF71C591C46]\n\t(No symbol) [0x00007FF71C5C7590]\n\t(No symbol) [0x00007FF71C5EF39C]\n\t(No symbol) [0x00007FF71C5C7153]\n\t(No symbol) [0x00007FF71C590421]\n\t(No symbol) [0x00007FF71C5911B3]\n\tGetHandleVerifier [0x00007FF71CA7D71D+3223453]\n\tGetHandleVerifier [0x00007FF71CA77CC2+3200322]\n\tGetHandleVerifier [0x00007FF71CA95AF3+3322739]\n\tGetHandleVerifier [0x00007FF71C796A1A+180890]\n\tGetHandleVerifier [0x00007FF71C79E11F+211359]\n\tGetHandleVerifier [0x00007FF71C785294+109332]\n\tGetHandleVerifier [0x00007FF71C785442+109762]\n\tGetHandleVerifier [0x00007FF71C76BA59+4825]\n\tBaseThreadInitThunk [0x00007FFCFA27E8D7+23]\n\tRtlUserThreadStart [0x00007FFCFBCBC5DC+44]\n\n", "trace": "  File \"C:\\Users\\taper\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Used\\tests\\term2\\page_object\\Base_page.py\", line 11, in click\n    self.driver.find_element(by, value).click()\n  File \"C:\\Users\\taper\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\taper\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\taper\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 384, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\taper\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "by", "value": "'xpath'"}, {"name": "value", "value": "'//a[contains(@href, 'common/home')]'"}], "start": 1748867709599, "stop": 1748867710647}], "start": 1748867708011, "stop": 1748867710649, "uuid": "e655d11c-19bd-4776-824c-843e4e76b9da", "historyId": "0f59423736b91485b12ecf719b530cb5", "testCaseId": "0f59423736b91485b12ecf719b530cb5", "fullName": "test.cp4_test#test_add_to_wish_list", "labels": [{"name": "feature", "value": "Wish List"}, {"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "cp4_test"}, {"name": "host", "value": "LAPTOP-EF6LB905"}, {"name": "thread", "value": "10164-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.cp4_test"}]}